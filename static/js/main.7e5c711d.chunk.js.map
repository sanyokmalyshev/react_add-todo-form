{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","TodoInfo","todo","userInfo","usersFromServer","find","userId","completed","title","TodoList","todos","map","App","useState","setTitle","setUser","todosFromServer","visibleTodos","setVisibleTodos","errorTitle","setErrorTitle","errorUser","setErrorUser","newTodoId","arrayTodoId","Math","max","buttonSubmit","e","preventDefault","userObject","userName","newTodo","state","action","method","type","placeholder","value","onChange","target","test","disabled","userObj","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e5c711d.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined;\n};\n\nexport const UserInfo = ({ user }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  const userInfo: User | undefined\n    = usersFromServer.find(user => user.id === todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={userInfo} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","/* eslint-disable no-console */\nimport './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('0');\n  const [visibleTodos, setVisibleTodos] = useState(todosFromServer);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handleTitle = (value: string) => {\n    setErrorTitle(false);\n    const re = /^[A-Za-z0-9а-яА-ЯёЁіІїЇ ]+$/;\n\n    if (re.test(value) || value === '') {\n      setTitle(value);\n    }\n  };\n\n  const newTodoId = () => {\n    const arrayTodoId = visibleTodos.map(todo => todo.id);\n    const id = Math.max(...arrayTodoId) + 1;\n\n    return id;\n  };\n\n  const clearState = () => {\n    setTitle('');\n    setUser('0');\n  };\n\n  const errors = () => {\n    if (user === '0') {\n      setErrorUser(true);\n    }\n\n    if (!title) {\n      setErrorTitle(true);\n    }\n  };\n\n  const buttonSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    errors();\n    if (user === '0' || !title) {\n      return;\n    }\n\n    const userObject = usersFromServer\n      .find(userName => userName.name === user);\n\n    if (!userObject) {\n      return;\n    }\n\n    const newTodo = {\n      id: newTodoId(),\n      title,\n      completed: false,\n      userId: userObject.id,\n    };\n\n    setVisibleTodos(state => (\n      [\n        ...state,\n        newTodo,\n      ]\n    ));\n    clearState();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            name=\"title\"\n            onChange={(e) => {\n              handleTitle(e.target.value);\n            }}\n          />\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            name=\"user\"\n            onChange={(e) => {\n              setUser(e.target.value);\n              if (e.target.value !== '0') {\n                setErrorUser(false);\n              }\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(userObj => (\n              <option\n                value={userObj.name}\n                key={userObj.id}\n              >\n                {userObj.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(e) => {\n            buttonSubmit(e);\n          }}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}